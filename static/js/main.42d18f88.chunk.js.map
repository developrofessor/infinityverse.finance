{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["saleAddr","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","App","useState","open","setOpen","saleAmount","setSaleAmount","useEffect","web3","Web3","givenProvider","a","eth","getChainId","chainId","console","log","web3Modal","Web3Modal","connect","connection","ethers","providers","Web3Provider","currentProvider","request","method","params","code","chainName","rpcUrls","blockExplorerUrls","alert","message","initWallet","saleVerse","provider","signer","getSigner","USDCContract","Contract","USDCCont","abi","saleContract","saleCont","approve","Math","pow","USDCCon","wait","buyVerseToken","saleCon","className","href","rel","target","id","onClick","Modal","onClose","Box","sx","textAlign","TextField","label","variant","type","onChange","e","value","Button","disableElevation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w+QAaMA,EAAW,6CAEXC,EAAQ,CACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAsRQC,MAnRf,WACI,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACN,IAAMC,EAAO,IAAIC,IAAKA,IAAKC,eADf,4CAEZ,gCAAAC,EAAA,+EAE8BH,EAAKI,IAAIC,aAFvC,UAEcC,EAFd,OAGQC,QAAQC,IAAIF,GACI,QAAZA,EAJZ,wBAKkBG,EAAY,IAAIC,IALlC,SAMqCD,EAAUE,UAN/C,OAMkBC,EANlB,OAO6B,IAAIC,IAAOC,UAAUC,aAClCH,GARhB,mDAesBZ,EAAKgB,gBAAgBC,QAAQ,CAC/BC,OAAQ,6BACRC,OAAQ,CAAC,CAAEb,QAAS,aAjBxC,8DAoBmC,OAAf,KAAMc,KApB1B,4CAsB8BpB,EAAKgB,gBAAgBC,QAAQ,CAC/BC,OAAQ,0BACRC,OAAQ,CACJ,CACIb,QAAS,SACTe,UAAW,oBACXC,QAAS,CACL,yCAEJC,kBAAmB,CACf,4BAhCxC,2DAsCwBC,MAAM,KAAMC,SAtCpC,0DA4CQlB,QAAQC,IAAR,MACAgB,MAAM,gBA7Cd,2EAFY,0DAkDZE,KACD,IACH,IAAMC,EAAS,uCAAG,4CAAAxB,EAAA,6DACRH,EAAO,IAAIC,IAAKA,IAAKC,eADb,kBAKYF,EAAKI,IAAIC,aALrB,UAMM,QANN,+BAOAI,EAAY,IAAIC,IAPhB,SAQmBD,EAAUE,UAR7B,UAQAC,EARA,OASAgB,EAAW,IAAIf,IAAOC,UAAUC,aAAaH,GAC7CiB,EAASD,EAASE,YAExBvB,QAAQC,IAAIqB,GACZtB,QAAQC,IAAIoB,GACZG,EAAe,IAAIlB,IAAOmB,SArFzB,6CAuFGC,EAASC,IACTL,GAEJM,EAAe,IAAItB,IAAOmB,SACtBlD,EACAsD,EAASF,IACTL,KAEAhC,EAAa,GAxBX,kCAyBoBkC,EAAaM,QAC/BvD,EACAe,EAAayC,KAAKC,IAAI,GAAI,IA3B5B,eAyBIC,EAzBJ,iBA6BIA,EAAQC,OA7BZ,yBA8BoBN,EAAaO,cAC/B7C,GA/BF,eA8BI8C,EA9BJ,iBAiCIA,EAAQF,OAjCZ,QAkCFjB,MAAM,2BAlCJ,wBAoCFA,MAAM,yBApCJ,2DAyCIxB,EAAKgB,gBAAgBC,QAAQ,CAC/BC,OAAQ,6BACRC,OAAQ,CAAC,CAAEb,QAAS,aA3CtB,2DA8CFkB,MAAM,KAAMC,SA9CV,0DAkDVlB,QAAQC,IAAR,MACAgB,MAAM,sBAnDI,kEAAH,qDAsDf,OACI,sBAAKoB,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,gCACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,IAAf,iCACA,qBAAKA,UAAU,IAAf,yCAEJ,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,OAAf,SACI,mBACIC,KAAK,8BACLC,IAAI,aACJC,OAAO,SAHX,SAKI,mBAAGH,UAAU,uBAGrB,qBAAKA,UAAU,OAAf,SACI,mBACIC,KAAK,iCACLC,IAAI,aACJC,OAAO,SAHX,SAKI,mBAAGH,UAAU,8BAK7B,8BAGQ,wBACIA,UAAU,MACVI,GAAG,MACHC,QAAS,kBAAMrD,GAAQ,IAH3B,uBASR,sBAAKgD,UAAU,iBAAf,UACI,sBAAMA,UAAU,OAAhB,uBACA,qBAAKA,UAAU,qBAGvB,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,aADnB,UAIA,+BACI,sBAAMA,UAAU,sBADpB,kBAGA,sBAAKA,UAAU,UAAf,uCAEI,uBAFJ,wKAMI,uBANJ,wlBAkBI,uBAlBJ,oDAoBI,uBApBJ,6BAsBI,uBAtBJ,yBAwBI,uBAxBJ,8FA2BI,uBA3BJ,sGA8BI,uBACA,uBACA,sDACA,uBAjCJ,SAmCI,uBAnCJ,SAqCI,uBArCJ,iCAuCI,uBACA,uBAxCJ,mCA0CI,uBA1CJ,8BA4CI,uBA5CJ,+BA8CI,uBACA,uBA/CJ,8DAiDI,uBACA,uBACA,kDACA,uBApDJ,oBAsDI,uBAtDJ,qBAwDI,uBAxDJ,yBA0DI,uBA1DJ,uBA4DI,uBACA,uBA7DJ,4HAkEA,sBAAKA,UAAU,SAAf,oBACY,IACR,mBACIC,KAAK,2CACLC,IAAI,aACJC,OAAO,SAHX,6BASR,cAACG,EAAA,EAAD,CACIvD,KAAMA,EACNwD,QAAS,kBAAMvD,GAAQ,IACvB,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAACwD,EAAA,EAAD,CAAKC,GAAItE,EAAOA,MAAO,CAAEuE,UAAW,UAApC,8BACqB,uBACjB,cAACC,EAAA,EAAD,CACIP,GAAG,eACHQ,MAAM,SACNC,QAAQ,SACRC,KAAK,SACLC,SAAU,SAACC,GACP9D,EAAc8D,EAAEb,OAAOc,OACvBtD,QAAQC,IAAIoD,EAAEb,OAAOc,UAG7B,uBACA,uBACA,uBACA,cAACC,EAAA,EAAD,CACIL,QAAQ,YACRR,QAAS,kBAAMtB,KACfoC,kBAAgB,EAHpB,8BCrRLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.42d18f88.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { ethers } from \"ethers\";\r\nimport Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\n\r\nimport USDCCont from \"./ABI/USDCCont.json\";\r\nimport saleCont from \"./ABI/saleCont.json\";\r\nconst USDCAddr = \"0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664\";\r\nconst saleAddr = \"0xe7aFed763350494A40Baa05D66e729EDb7ae2FaF\";\r\n\r\nconst style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nfunction App() {\r\n    const [open, setOpen] = useState(false);\r\n    const [saleAmount, setSaleAmount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const web3 = new Web3(Web3.givenProvider);\r\n        async function initWallet() {\r\n            try {\r\n                const chainId = await web3.eth.getChainId();\r\n                console.log(chainId);\r\n                if (chainId === 43114) {\r\n                    const web3Modal = new Web3Modal();\r\n                    const connection = await web3Modal.connect();\r\n                    const provider = new ethers.providers.Web3Provider(\r\n                        connection\r\n                    );\r\n                    // const signer = provider.getSigner();\r\n                    // const myAddr = signer.provider.provider.selectedAddress;\r\n                    // alert(\"successfully connected!\")\r\n                } else {\r\n                    try {\r\n                        await web3.currentProvider.request({\r\n                            method: \"wallet_switchEthereumChain\",\r\n                            params: [{ chainId: \"0xA86A\" }],\r\n                        });\r\n                    } catch (error) {\r\n                        if (error.code === 4902) {\r\n                            try {\r\n                                await web3.currentProvider.request({\r\n                                    method: \"wallet_addEthereumChain\",\r\n                                    params: [\r\n                                        {\r\n                                            chainId: \"0xA86A\",\r\n                                            chainName: \"Avalanche Mainnet\",\r\n                                            rpcUrls: [\r\n                                                \"https://api.avax.network/ext/bc/C/rpc\",\r\n                                            ],\r\n                                            blockExplorerUrls: [\r\n                                                \"https://snowtrace.io\",\r\n                                            ],\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            } catch (error) {\r\n                                alert(error.message);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n                alert(\"add metamask\");\r\n            }\r\n        }\r\n        initWallet();\r\n    }, []);\r\n    const saleVerse = async () => {\r\n        const web3 = new Web3(Web3.givenProvider);\r\n        let USDCContract;\r\n        let saleContract;\r\n        try {\r\n            const chainId = await web3.eth.getChainId();\r\n            if (chainId === 43114) {\r\n                const web3Modal = new Web3Modal();\r\n                const connection = await web3Modal.connect();\r\n                const provider = new ethers.providers.Web3Provider(connection);\r\n                const signer = provider.getSigner();\r\n                // const myAddr = signer.provider.provider.selectedAddress;\r\n                console.log(signer);\r\n                console.log(provider);\r\n                USDCContract = new ethers.Contract(\r\n                    USDCAddr,\r\n                    USDCCont.abi,\r\n                    signer\r\n                );\r\n                saleContract = new ethers.Contract(\r\n                    saleAddr,\r\n                    saleCont.abi,\r\n                    signer\r\n                );\r\n                if (saleAmount > 0) {\r\n                    const USDCCon = await USDCContract.approve(\r\n                        saleAddr,\r\n                        saleAmount * Math.pow(10, 6)\r\n                    );\r\n                    await USDCCon.wait();\r\n                    const saleCon = await saleContract.buyVerseToken(\r\n                        saleAmount\r\n                    );\r\n                    await saleCon.wait();\r\n                    alert(\"Successfully purchased!\");\r\n                } else {\r\n                    alert(\"Input amount of sale!\");\r\n                }\r\n            } else {\r\n                // alert('The wrong network, please switch to the Avalanche network.')\r\n                try {\r\n                    await web3.currentProvider.request({\r\n                        method: \"wallet_switchEthereumChain\",\r\n                        params: [{ chainId: \"0xA86A\" }],\r\n                    });\r\n                } catch (error) {\r\n                    alert(error.message);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(\"Transaction failed\");\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <div>\r\n                    <div className=\"title\">\r\n                        <div className=\"a\">Verse Token Presale</div>\r\n                        <div className=\"b\">Limited Supply Available</div>\r\n                    </div>\r\n                    <div className=\"social-icons\">\r\n                        <div className=\"icon\">\r\n                            <a\r\n                                href=\"https://discord.gg/Rt4eheWp\"\r\n                                rel=\"noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <i className=\"fab fa-discord\"></i>\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"icon\">\r\n                            <a\r\n                                href=\"https://t.me/versetokenpresale\"\r\n                                rel=\"noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <i className=\"fab fa-telegram\"></i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {/* <div className=\"timer\">00:00:00</div> */}\r\n                    {\r\n                        <button\r\n                            className=\"btn\"\r\n                            id=\"buy\"\r\n                            onClick={() => setOpen(true)}\r\n                        >\r\n                            Buy now\r\n                        </button>\r\n                    }\r\n                </div>\r\n                <div className=\"read-more-area\">\r\n                    <span className=\"text\">Read More</span>\r\n                    <div className=\"arrow-down\"></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"documents\">\r\n                <div className=\"back-section\">\r\n                    <div className=\"arrow-up\"></div>\r\n                    Back\r\n                </div>\r\n                <h2>\r\n                    <span className=\"verse-medium dark\"></span> Verse Token\r\n                </h2>\r\n                <div className=\"content\">\r\n                    - Total Supply = 5 million\r\n                    <br />\r\n                    - 100K verse TOKEN'S IN PRESALE WILL BE A RATIO of 1:1.\r\n                    PRESALE PRICE = $1 PER VERSE TOKEN. Presale Holders will\r\n                    gain early access to the farm and the physical shop.\r\n                    <br />\r\n                    - 10% locked supply for 4 months totaling 500k verse tokens.\r\n                    Once the 4 months has passed from the initial launch, 50k\r\n                    verse tokens will be burned and 50k verse tokens will be\r\n                    airdropped. 5,000 verse tokens will be given to OG holders\r\n                    of the Infinity Stoners collection. 5,000 verse tokens will\r\n                    be given to OG holders of the Infinity Citizens collection.\r\n                    20,000 verse tokens will be airdropped to the whole\r\n                    community. 4,000 verse tokens will be airdropped to the\r\n                    first 8 holders of the comic book NFTs. 16,000 verse tokens\r\n                    will be given overtime in portions to participents in the\r\n                    community chats.\r\n                    <br />\r\n                    - NFTs will be available at launch for all users.\r\n                    <br />\r\n                    - Fee free/tax free token.\r\n                    <br />\r\n                    - 0% farm deposit fee.\r\n                    <br />\r\n                    - A portion of the proceedings from the physical shop will\r\n                    be used as a buy back mechanism.\r\n                    <br />\r\n                    - 400k verse tokens will be divided between the founders,\r\n                    co-founders, alliances and the community.\r\n                    <br />\r\n                    <br />\r\n                    <u>Marketplace features:</u>\r\n                    <br />\r\n                    - Farm\r\n                    <br />\r\n                    - NFTs\r\n                    <br />\r\n                    - Physical Item Shop and more.\r\n                    <br />\r\n                    <br />\r\n                    Platform launch date: 12/20/2021\r\n                    <br />\r\n                    NFT launch date: 12/20/2021\r\n                    <br />\r\n                    Farm launch date: 12/20/2021\r\n                    <br />\r\n                    <br />\r\n                    The VERSE TOKEN can be used on the INFINITY VERSE platform.\r\n                    <br />\r\n                    <br />\r\n                    <u>FUTURE DEVELOPING</u>\r\n                    <br />\r\n                    - Priority 1: Dex\r\n                    <br />\r\n                    - Priority 2: Game\r\n                    <br />\r\n                    - Priority 3: 3D Verse\r\n                    <br />\r\n                    - Priority 4: Bridge\r\n                    <br />\r\n                    <br />\r\n                    100% of the proceedings that will be gathered from the\r\n                    prelaunch event will be invested towards improving the\r\n                    project.\r\n                </div>\r\n                <div className=\"credit\">\r\n                    Made by{\" \"}\r\n                    <a\r\n                        href=\"https://www.instagram.com/professor.dev/\"\r\n                        rel=\"noreferrer\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        Professor\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} style={{ textAlign: \"center\" }}>\r\n                    1 VRSE = 1 USDC.e<br />\r\n                    <TextField\r\n                        id=\"filled-basic\"\r\n                        label=\"Amount\"\r\n                        variant=\"filled\"\r\n                        type=\"number\"\r\n                        onChange={(e) => {\r\n                            setSaleAmount(e.target.value);\r\n                            console.log(e.target.value);\r\n                        }}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => saleVerse()}\r\n                        disableElevation\r\n                    >\r\n                        Buy Now\r\n                    </Button>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}